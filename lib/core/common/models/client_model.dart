import 'package:andersen/core/common/entities/client_entity.dart';

class ClientModel extends ClientEntity {
  const ClientModel({
    required super.id,
    super.name,
    super.type,
    super.email,
    super.phone,
    super.website,
    super.role,
    super.country,
    super.region,
    super.city,
    super.street,
    super.zip,
    super.building,
    super.lastname,
    super.middlename,
    super.inn,
    super.oked,
    super.bankName,
    super.bankAccountNumber,
    super.bankCode,
    super.birthday,
    super.companyId,
    super.createdAt,
    super.updatedAt,
    super.deletedAt,
    super.createdById,
    super.deletedById,
  });

  factory ClientModel.fromJson(Map<String, dynamic> json) {
    return ClientModel(
      id: json["id"],
      name: json["name"],
      type: json["type"],
      email: json["email"],
      phone: json["phone"],
      website: json["website"],
      role: json["role"],
      country: json["country"],
      region: json["region"],
      city: json["city"],
      street: json["street"],
      zip: json["zip"],
      building: json["building"],
      lastname: json["lastname"],
      middlename: json["middlename"],
      inn: json["inn"],
      oked: json["oked"],
      bankName: json["bankName"],
      bankAccountNumber: json["bankAccountNumber"],
      bankCode: json["bankCode"],
      birthday: json["birthday"],
      companyId: json["companyId"],
      createdAt: DateTime.tryParse(json["createdAt"] ?? ""),
      updatedAt: DateTime.tryParse(json["updatedAt"] ?? ""),
      deletedAt: json["deletedAt"],
      createdById: json["createdById"],
      deletedById: json["deletedById"],
    );
  }

  Map<String, dynamic> toJson() => {
    "id": id,
    "name": name,
    "type": type,
    "email": email,
    "phone": phone,
    "website": website,
    "role": role,
    "country": country,
    "region": region,
    "city": city,
    "street": street,
    "zip": zip,
    "building": building,
    "lastname": lastname,
    "middlename": middlename,
    "inn": inn,
    "oked": oked,
    "bankName": bankName,
    "bankAccountNumber": bankAccountNumber,
    "bankCode": bankCode,
    "birthday": birthday,
    "companyId": companyId,
    "createdAt": createdAt?.toIso8601String(),
    "updatedAt": updatedAt?.toIso8601String(),
    "deletedAt": deletedAt,
    "createdById": createdById,
    "deletedById": deletedById,
  };
}
